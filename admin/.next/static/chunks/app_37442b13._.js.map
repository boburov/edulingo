{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/xamidov/devs/edulingo/admin/app/%28global_components%29/Loader.tsx"],"sourcesContent":["import { PulseLoader } from \"react-spinners\";\n\nexport default function Loader() {\n  return <PulseLoader color=\"#26a269\" size={12} />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,6LAAC,oMAAA,CAAA,cAAW;QAAC,OAAM;QAAU,MAAM;;;;;;AAC5C;KAFwB","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///home/xamidov/devs/edulingo/admin/app/api/api.config.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response && error.response?.status === 404) {\n      localStorage.removeItem(\"token\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,QAAQ;QACR,gBAAgB;IAClB;AACF;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC;IACC,OAAO,SAAS,IAAI;AACtB,GACA,CAAC;IACC,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QACpD,aAAa,UAAU,CAAC;IAC1B;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/xamidov/devs/edulingo/admin/app/api/api.endpoint.ts"],"sourcesContent":["const apiEndpoints = {\n  home: \"/\",\n\n  // admin\n  verifyAdmin: \"/admin/verify\",\n\n  // playlists\n  createplaylist: \"/playlists/new\",\n  getPlaylistByName: (unique_name: string) => `/playlists/${unique_name}`,\n  getAllPlaylists: \"/playlists\",\n};\n\nexport default apiEndpoints;\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACnB,MAAM;IAEN,QAAQ;IACR,aAAa;IAEb,YAAY;IACZ,gBAAgB;IAChB,mBAAmB,CAAC,cAAwB,CAAC,WAAW,EAAE,aAAa;IACvE,iBAAiB;AACnB;uCAEe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/xamidov/devs/edulingo/admin/app/api/services/playlistsService.ts"],"sourcesContent":["import api from \"../api.config\";\nimport apiEndpoints from \"../api.endpoint\";\nimport { CreatePlaylistData } from \"./utils/playlistTypes\";\n\nconst playlistService = {\n  create: (data: CreatePlaylistData) => {\n    try {\n      return api.post(apiEndpoints.createplaylist, data);\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  getAll: () => {\n    try {\n      return api.get(apiEndpoints.getAllPlaylists);\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  getByUniqueName: (unique_name: string) => {\n    try {\n      return api.get(apiEndpoints.getPlaylistByName(unique_name));\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default playlistService;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGA,MAAM,kBAAkB;IACtB,QAAQ,CAAC;QACP,IAAI;YACF,OAAO,8HAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gIAAA,CAAA,UAAY,CAAC,cAAc,EAAE;QAC/C,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,QAAQ;QACN,IAAI;YACF,OAAO,8HAAA,CAAA,UAAG,CAAC,GAAG,CAAC,gIAAA,CAAA,UAAY,CAAC,eAAe;QAC7C,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,iBAAiB,CAAC;QAChB,IAAI;YACF,OAAO,8HAAA,CAAA,UAAG,CAAC,GAAG,CAAC,gIAAA,CAAA,UAAY,CAAC,iBAAiB,CAAC;QAChD,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;AACF;uCAEe","debugId":null}}]
}